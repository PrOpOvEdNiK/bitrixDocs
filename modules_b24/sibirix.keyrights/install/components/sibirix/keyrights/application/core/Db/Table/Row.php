<?php/** * @property array $_relatedFieldsName * @property array $_relatedFields */class Core_Db_Table_Row extends Zend_Db_Table_Row_Abstract {    protected $_relatedFieldsName = array();    protected $_relatedFields = array();    /**     * @override     * Переопределение функции toArray() с добавлением связанных полей     * @return array     */    public function toArray() {        $_data = parent::toArray();        foreach ($this->_relatedFields as $columnName => $columnValue) {            $_data[$columnName] = $columnValue;        }        return $_data;    }    /**     * @param string $columnName     * @param mixed $columnValue     * @throws Zend_Db_Table_Row_Exception     */    public function setRelatedField($columnName, $columnValue) {        if (array_key_exists($columnName, $this->_data)) {            require_once 'Zend/Db/Table/Row/Exception.php';            throw new Zend_Db_Table_Row_Exception("Specified column \"$columnName\" is table column, can not be overrided");        }        $this->_relatedFields[$columnName] = $columnValue;    }    /**     * Retrieve row field value     *     * @param  string $columnName The user-specified column name.     * @return string             The corresponding column value.     * @throws Zend_Db_Table_Row_Exception if the $columnName is not a column in the row.     */    public function __get($columnName) {        if (isset($this->_relatedFields[$columnName])) {            return $this->_relatedFields[$columnName];        }        return parent::__get($columnName);    }    /**     * @param string $columnName     * @param mixed $columnValue     */    public function __set($columnName, $columnValue) {        if (isset($this->_relatedFields[$columnName])) {            $this->_relatedFields[$columnName] = $columnValue;        } elseif (isset($this->_relatedFieldsName[$columnName])) {            $this->_relatedFields[$columnName] = $columnValue;        } else {            if (!isset($this->_data[$columnName]) || ($this->_data[$columnName] !== $columnValue)) {                parent::__set($columnName, $columnValue);            }        }    }    /**     * @param string $columnName     * @return bool     */    public function __isset($columnName) {        if (isset($this->_relatedFieldsName[$columnName])) {            return isset($this->_relatedFields[$columnName]);        }        return parent::__isset($columnName);    }    public function __unset($columnName) {        if (isset($this->_relatedFieldsName[$columnName])) {            unset($this->_relatedFields[$columnName]);            return $this;        } else {            return parent::__unset($columnName);        }    }    /**     * @return array     */    public function __sleep() {        return parent::__sleep();    }}