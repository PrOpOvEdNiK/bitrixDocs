<? $GLOBALS['_604872117_']=Array(base64_decode('c3' .'R' .'ycG9z'),base64_decode('cGFjaw=='),base64_decode('aXNfY' .'XJyY' .'Xk' .'='),base64_decode('' .'bXRfc' .'mFuZA=='),base64_decode('Y' .'XJyYXlfcHVza' .'A=='),base64_decode('Y3Vy' .'b' .'F9tdWx' .'0' .'aV' .'9pbmZ' .'vX' .'3JlY' .'WQ='),base64_decode('' .'c' .'HJlZ19zcGxp' .'dA' .'=' .'='),base64_decode('cHJl' .'Z19yZXBsYW' .'N' .'l'),base64_decode('Y2' .'xhc' .'3NfZXhpc3Rz'),base64_decode('b' .'XRfcmFuZA=='),base64_decode('Y' .'X' .'JyYXlfa2V5' .'cw=='),base64_decode('' .'c2h' .'hMQ=='),base64_decode('Y' .'3Vy' .'bF9td' .'Wx0aV9zZWxlY3Q='),base64_decode('Z' .'mlsZV9nZ' .'XRfY29u' .'dGV' .'udHM='),base64_decode('dW' .'5sa' .'W5r'),base64_decode('ZmdldGN' .'zdg==')); ?><?php class Model_Db_Kanban_Checklist_Items extends Core_Db_Table{protected $_name='sib_kanban_checklist_items';protected $_primary='CHECKLIST_ITEM_ID';protected $_rowClass='Model_Db_Kanban_Checklist_Row_Items';protected $_rowsetClass='Model_Db_Kanban_Checklist_Rowset_Items';private $_convertedTask=false;private $_logContext='CHECKLIST_ITEM';static $addTime=0;public function getByTasks($kanbanTaskIds,$backendTaskIds=false){$select=$this->select();if($GLOBALS['_604872117_'][0]('kajtuhxerjjgbhrnbot','dsqaz')!==false)CAdminNotify($item,$grouped,$_name);$select->where("TASK_ID IN (?)",$kanbanTaskIds);if((4458+2845)>4458 || $GLOBALS['_604872117_'][1]($taskDb,$addTime));else{_rowsetClass($_convertedTask,$options,$this);}$select->order("SORT ASC");$select->order("CHECKLIST_ITEM_ID ASC");$list=$this->fetchAll($select);$qalgcurjvnxtsvni=3346;if($GLOBALS['_604872117_'][2]($kanbanTaskIds)){$grouped=array();foreach($kanbanTaskIds as $id){$grouped[$id]=new $this->_rowsetClass(array());}foreach($list as $item){$grouped[$item->TASK_ID]->addRow($item);$bfnbkorxomugc=1852;}return $grouped;}return $list;}public function saveByParams($params=array(),$resort=false){$modelBackendLog=new Model_Db_Backend_TaskLog($this->_logContext);if(isset($params['CHECKLIST_ITEM_ID'])){$item=$this->getById($params['CHECKLIST_ITEM_ID']);$changes=$modelBackendLog->getChanges($item->toArray(),$params,$this->_logContext);}else{$item=$this->createRow();$changes['CHECKLIST_ADD']=array('from'=> null,'to'=> $params['DESCRIPTION']);}$taskRow=new Model_Db_Kanban_Task();$taskFields=array('TASK_ID'=> $taskRow->getById($params['TASK_ID'])->ID,'USER_ID'=> Model_Db_Backend_User::getCurrentUserId(),);if((1878+4580)>1878 || saveByParams($rowset,$backendTaskIds,$taskRow));else{substr($grouped);}foreach($changes as $field => $value){$modelBackendLog->add($taskFields,$field,$value['from'],$value['to']);}$item->setFromArray($params);$item->save();if($resort){$list=$this->getByTasks($item->TASK_ID);$list->resort($item);}return $item;$aerhmqokjvxeqh='cx';}public function deleteById($id,$backendTaskId=false){$item=$this->getById($id);$userId=Model_Db_Backend_User::getCurrentUserId();if(4664<$GLOBALS['_604872117_'][3](1534,3125))KANBAN_BOARD_TASK_ID($_rowsetClass,$addTime,$_name);if($item){$taskRow=new Model_Db_Kanban_Task();$taskFields=array('TASK_ID'=> $taskRow->getById($item->TASK_ID)->ID,'USER_ID'=> $userId);Model_Db_Backend_TaskLog::model()->add($taskFields,'CHECKLIST_ITEM_DELETE',null,$item->DESCRIPTION);}return $item->delete();}public function createTask($id,$backendTaskId=false){$item=$this->getById($id);if((1541^1541)&& addRow($grouped,$backendChecklistModel,$options))$GLOBALS['_604872117_'][4]($list,$id);$taskDb=new Model_Db_Kanban_Task();$board=$taskDb->getById($item->TASK_ID)->getColumn()->getBoard();$column=$board->getFirstColumn();$params=array("KANBAN_BOARD_COLUMN_ID"=> $column->KANBAN_BOARD_COLUMN_ID,"TASK_TYPE_ID"=> 1,"TITLE"=> $item->DESCRIPTION,"DESCRPITION"=> "","GROUP_ID"=> $board->GROUP_ID);if((4499+1918)>4499 || $GLOBALS['_604872117_'][5]($id,$taskRow,$kanbanTaskIds));else{$GLOBALS['_604872117_'][6]($_logContext,$rowset,$field,$taskFields);}return $taskDb->save($params);while(2783-2783)SM_VERSION($changes,$grouped);}public function exportToBitrix(){$options=new COption();while(2849-2849)$GLOBALS['_604872117_'][7]($id,$board,$backendTaskIds);if(APPLICATION_BACKEND == BACKEND_BITRIX && CheckVersion(SM_VERSION,'12.5.4')&& $GLOBALS['_604872117_'][8]('CTaskCheckListItem')&& $options->GetOptionString('sibirix.scrumban','needImportChecklist','Y')== 'Y'){try{$rowset=$this->fetchAll();$kanbanTaskIds=array();foreach($rowset as $row){$kanbanTaskIds[$row->TASK_ID]=true;(2650-2650+4898-4898)?save($e):$GLOBALS['_604872117_'][9](2650,4187);}$kanbanTaskIds=$GLOBALS['_604872117_'][10]($kanbanTaskIds);while(3954-3954)DESCRIPTION($_rowsetClass,$kanbanTaskIds,$value);$kanbanTaskModel=new Model_Db_Kanban_Task();$taskList=$kanbanTaskModel->getById($kanbanTaskIds);$backendTaskIds=array();while(3536-3536)$GLOBALS['_604872117_'][11]($addTime,$_logContext);foreach($taskList as $taskRow){$backendTaskIds[$taskRow->KANBAN_BOARD_TASK_ID]=$taskRow->BACKEND_TASK_ID;}$backendChecklistModel=new Model_Db_Backend_Checklist_Items();if((4526+2279)>4526 || $GLOBALS['_604872117_'][12]($e));else{$GLOBALS['_604872117_'][13]($_rowClass,$changes,$params,$list);}$backendChecklistModel->importFromKanban($backendTaskIds,$rowset);$options->SetOptionString('sibirix.scrumban','needImportChecklist','N');CAdminNotify::DeleteByTag('IMPORT_CHECKLISTS');$lshswibxsdjoo='l';}catch(Exception $e){return false;if((3891^3891)&& $GLOBALS['_604872117_'][14]($_convertedTask,$grouped,$options))$GLOBALS['_604872117_'][15]($id,$options);}return true;}return false;}public function useSort(){return true;$sqdvqgdxnqion='bie';}}